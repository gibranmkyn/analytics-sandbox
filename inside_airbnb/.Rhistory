rating_model_sentimentr <- lm(sentimentr~n_chars, data=model_data)
rating_model_sent_bing <- lm(sentimentr~n_polite), data=model_data)
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr)
rating_model_sentimentr <- lm(sentimentr~n_chars, data=model_data)
rating_model_sent_bing <- lm(sentimentr~n_polite, data=model_data)
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr)
sentimentr_model_nchar <- lm(sentimentr~n_chars, data=model_data)
sentimentr_model_npolite <- lm(sentimentr~n_polite, data=model_data)
stargazer::stargazer(sentimentr_model_nchar,sentimentr_model_npolite)
stargazer::stargazer(sentimentr_model_nchar,sentimentr_model_npolite, ,type = "text")
stargazer::stargazer(sentimentr_model_nchar,sentimentr_model_npolite, type = "text")
sentimentr_model_nchar <- lm(sentimentr~n_chars + n_polite + host_mentioned + n_periods, data=model_data)
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr, host_mentioned, n_periods)
sentimentr_model_nchar <- lm(sentimentr ~n_chars + n_polite + host_mentioned + n_periods, data=model_data)
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr, host_mentioned, n_periods)
sentimentr_model_features <- lm(sentimentr ~n_chars + n_polite + host_mentioned + n_periods, data=model_data)
summary(sentimentr_model_features)
review_sample %>%
mutate(exclamation_2 = str_detect(comments, fixed("!!")),
exclamation_3 = str_detect(comments, fixed("!!!")),
exclamation_4 = str_detect(comments, fixed("!!!!")),
question_2 = str_detect(comments, fixed("??")),
question_3 = str_detect(comments, fixed("???")),
question_4 = str_detect(comments, fixed("????")),
exclamation_sent = exclamation_2 + exclamation_3 +exclamation_4,
question_sent = question_2 + question_3 + question_4,
syntac_sent = exclamation_sent - question_sent) %>%
select(review_id, syntac_sent)
library(stringr)
# ----- Whether host name is mentioned in the comments
review_sample <- review_sample %>%
left_join(listing_sample %>% select(listing_id, host_id)) %>%
left_join(host_sample %>% distinct(host_id, host_name)) %>%
mutate(host_mentioned = as.numeric(grepl(host_name,comments, ignore.case = TRUE))) %>%
review_sample %>%
mutate(exclamation_2 = str_detect(comments, fixed("!!")),
exclamation_3 = str_detect(comments, fixed("!!!")),
exclamation_4 = str_detect(comments, fixed("!!!!")),
question_2 = str_detect(comments, fixed("??")),
question_3 = str_detect(comments, fixed("???")),
question_4 = str_detect(comments, fixed("????")),
exclamation_sent = exclamation_2 + exclamation_3 +exclamation_4,
question_sent = question_2 + question_3 + question_4,
syntac_sent = exclamation_sent - question_sent) %>%
select(review_id, syntac_sent)
review_sample %>%
mutate(exclamation_2 = str_detect(comments, fixed("!!")),
exclamation_3 = str_detect(comments, fixed("!!!")),
exclamation_4 = str_detect(comments, fixed("!!!!")),
question_2 = str_detect(comments, fixed("??")),
question_3 = str_detect(comments, fixed("???")),
question_4 = str_detect(comments, fixed("????")),
exclamation_sent = exclamation_2 + exclamation_3 +exclamation_4,
question_sent = question_2 + question_3 + question_4,
syntac_sent = exclamation_sent - question_sent) %>%
select(review_id, syntac_sent)
sent_syntac <- review_sample %>%
mutate(exclamation_2 = str_detect(comments, fixed("!!")),
exclamation_3 = str_detect(comments, fixed("!!!")),
exclamation_4 = str_detect(comments, fixed("!!!!")),
question_2 = str_detect(comments, fixed("??")),
question_3 = str_detect(comments, fixed("???")),
question_4 = str_detect(comments, fixed("????")),
exclamation_sent = exclamation_2 + exclamation_3 +exclamation_4,
question_sent = question_2 + question_3 + question_4,
sent_syntac = exclamation_sent - question_sent) %>%
select(review_id, sent_syntac)
review_sample <- review_sample %>% left_join(sent_syntac, by = 'review_id')
sent_syntac
review_sample
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr, host_mentioned, n_periods, sent_syntac)
sentimentr_model_features <- lm(sentimentr ~n_chars + n_polite + host_mentioned + n_periods + sent_syntac, data=model_data)
summary(sentimentr_model_features)
hist(review_sample$n_chars, breaks = 200)
hist(review_sample$n_polite, breaks = 200)
hist(review_sample$sent_syntac, breaks = 200)
model_data <- review_sample %>%
select(n_chars, n_polite, sentimentr, host_mentioned, n_periods, sent_syntac)
sentimentr_model_features <- lm(sentimentr ~n_chars + n_polite + host_mentioned + n_periods + sent_syntac, data=model_data)
summary(sentimentr_model_features)
# ----- Data Importing
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
dbListTables(conn)
dbGetQuery(conn, 'select * from new_description_cleaned limit 3')
dbGetQuery(conn, 'select * from review_udipipe_info limit 3')
dbGetQuery(conn, 'select * from comments_cleaned limit 3')
dbGetQuery(conn, 'select distinct(file_name) from review')
dbGetQuery(conn, 'select * from new_description_cleaned limit 3')
dbGetQuery(conn, 'select count(listing_id) from new_description_cleaned')
dbGetQuery(conn, 'select distinct(listing_id) from new_description_cleaned')
dbGetQuery(conn, 'select count(review_id) from comments_cleaned')
dbGetQuery(conn, 'select * from comments_cleaned limit 3')
dbGetQuery(conn, 'select * from new_description_cleaned limit 3')
dbGetQuery(conn, 'select distinct(listing_id, new_description_cleaned) new_description_cleaned')
dbGetQuery(conn, 'select distinct(listing_id, new_description_cleaned) FROM new_description_cleaned')
dbGetQuery(conn, 'select * FROM new_description_cleaned limit 3')
dbGetQuery(conn, 'select distinct(listing_id, new_description_cleaned) FROM new_description_cleaned limit 3')
dbGetQuery(conn, 'select distinct listing_id, new_description_cleaned FROM new_description_cleaned limit 3')
dbGetQuery(conn, 'select distinct listing_id, new_description_cleaned FROM new_description_cleaned')
dbGetQuery(conn, '
SELECT * FROM listing where file_name = "Amsterdam_listings.csv.gz" limit 5000
LEFT JOIN new_description_cleaned ON listing_id = listing_id')
dbGetQuery(conn, '
SELECT * FROM listing where file_name = "Amsterdam_listings.csv.gz" limit 5000 LEFT JOIN new_description_cleaned ON listing_id = listing_id')
dbGetQuery(conn, '
SELECT * FROM listing where file_name = "Amsterdam_listings.csv.gz" LEFT JOIN new_description_cleaned ON listing_id = listing_id  limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing where file_name = "Amsterdam_listings.csv.gz" limit 5000
LEFT JOIN new_description_cleaned ON listing.listing_id = new_description_cleaned.listing_id')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN new_description_cleaned ON listing.listing_id = new_description_cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000 ')
dbGetQuery(conn, 'select * from listing limit 3')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN new_description_cleaned ON listing.listing_id = new_description_cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, 'select * from new_description_cleaned limit 3')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct, new_description_cleaned FROM new_description_cleaned) ON listing.listing_id = new_description_cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct, new_description_cleaned FROM new_description_cleaned) AS cleaned ON listing.listing_id = cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct new_description_cleaned FROM new_description_cleaned) AS cleaned ON listing.listing_id = cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct new_description_cleaned FROM new_description_cleaned) ON listing.listing_id = new_description_cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, 'SELECT distinct new_description_cleaned FROM new_description_cleaned')
1+1
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct listing_id, new_description_cleaned FROM new_description_cleaned) ON listing.listing_id = new_description_cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct listing_id, new_description_cleaned FROM new_description_cleaned) AS cleaned ON listing.listing_id = cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, 'SELECT distinct listing_id new_description_cleaned FROM new_description_cleaned')
dbGetQuery(conn, 'SELECT distinct listing_id, new_description_cleaned FROM new_description_cleaned')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT listing_id, new_description_cleaned FROM new_description_cleaned) AS cleaned ON listing.listing_id = cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbGetQuery(conn, '
SELECT * FROM listing
LEFT JOIN (SELECT distinct(listing_id), new_description_cleaned FROM new_description_cleaned) AS cleaned ON listing.listing_id = cleaned.listing_id
WHERE file_name = "Amsterdam_listings.csv.gz" limit 5000')
dbDisconnect(conn)
rm(list = ls())
library(RSQLite)
library(udpipe)
library(cld3)
library(tm)
library(ggplot2)
library(gridExtra)
library(stm)
library(quanteda)
library(textfeatures)
library(sentimentr)
library(qdap)
library(lubridate)
library(stargazer)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
library(textfeatures)
rm(list = ls())
library(RSQLite)
library(tm)
library(ggplot2)
library(gridExtra)
library(stm)
library(quanteda)
library(textfeatures)
library(sentimentr)
library(qdap)
library(lubridate)
library(stargazer)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
# ----- Data Importing
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
dbGetQuery(conn, 'SELECT distinct(market) FROM listing')
city_list <- dbGetQuery(conn, 'SELECT distinct(market) FROM listing')
city_list <- city_list$market
city_list
## ------------------------------------------------------------------------
# knitr::opts_chunk$set(eval = FALSE)
## ---- message=FALSE------------------------------------------------------
rm(list = ls())
library(RSQLite)
library(tm)
library(ggplot2)
library(gridExtra)
library(stm)
library(quanteda)
library(textfeatures)
library(sentimentr)
library(qdap)
library(lubridate)
library(stargazer)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
## ------------------------------------------------------------------------
start <- Sys.time()
## ------------------------------------------------------------------------
city <- c("Amsterdam", "Melbourne", "New York")
city[1]
## ------------------------------------------------------------------------
set.seed(10)
t1 <- Sys.time()
# ----- Data Importing
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
# ----- Select listings
listing_sample <- dbGetQuery(conn, paste0('SELECT listing.*, annotated_description FROM listing
LEFT JOIN description_udpipe ON listing.listing_id = description_udpipe.listing_id
WHERE market = "',city[1], '"'))
listing_sample <- listing_sample[, !duplicated(colnames(listing_sample))] %>%
mutate(security_deposit = as.numeric(gsub(",", "", substring(security_deposit, 2)))) %>%
mutate(cleaning_fee = as.numeric(gsub(",", "", substring(cleaning_fee, 2)))) %>%
mutate(extra_people = as.numeric(gsub(",", "", substring(extra_people, 2)))) %>%
sample_frac(0.40)
# ----- Select owners of the listings
host_distinct <- unique(listing_sample$host_id)
host_sample <- dbGetQuery(conn, paste('SELECT host_id, host_name FROM host WHERE host_id IN(', paste(host_distinct, collapse = ","), ')'))  %>%
distinct(host_id, host_name)
# ----- Select reviews of the listings
listing_distinct <- listing_sample %>%  distinct(listing_id)
review_sample <- dbGetQuery(conn,paste('
SELECT listing_id, review.review_id, review_date, comments, comments_semi_cleaned, annotated_comments_partb, file_name
FROM review LEFT JOIN comments_cleaned ON review.review_id = comments_cleaned.review_id WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2))) %>%
mutate(review_date = as.Date(review_date))
# ----- Select calendar of the listings
calendar <- dbGetQuery(conn, paste('SELECT * FROM calendar WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2)))
save(calendar, file = 'temp/calendar.rda')
rm(listing_distinct)
rm(host_distinct)
dbDisconnect(conn)
t2 <- Sys.time()
t2-t1
## ------------------------------------------------------------------------
reviewsNum <- review_sample %>% group_by(review_date) %>% summarise(number = n())
ggplot(reviewsNum, aes(review_date, number)) +
geom_point(na.rm=TRUE, color = "#007A87", alpha=0.5) + geom_smooth(color = "#FF5A5F")+
ggtitle(paste("How popular is Airbnb in", city[1], "?"),
subtitle = "Number of Reviews across years") +
labs(x = "Year", y = "Unique listings recieving reviews") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
theme(plot.caption = element_text(color = "grey68"))
rm(reviewsNum)
## ------------------------------------------------------------------------
load(file = 'temp/calendar.rda')
groupedCalendarAll <- calendar %>%
group_by(bookingdate) %>%
summarise(average_price = mean(price, na.rm = TRUE)) %>%
mutate(year = as.factor(as.character(year(bookingdate))))
# ----- Trend in Listing Price
ggplot(groupedCalendarAll, aes(x = month(bookingdate), y=average_price)) +
geom_point(na.rm=TRUE, alpha=0.5, color = "#007A87") + geom_smooth(color = "#FF5A5F")+ facet_grid(~year)+
ggtitle(paste("Trend of Airbnb Listing Prices in", city[1]) ,
subtitle = "Average listing price across Months") +
labs(x = "Month", y = "Average price across Listings") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(groupedCalendarAll)
## ------------------------------------------------------------------------
airbnb_occ_rate <- calendar %>%
group_by(bookingdate) %>%
summarise(totalBooked = sum(booked, na.rm = TRUE), totalListings = n()) %>%
mutate(percent_booked = (totalBooked/totalListings)*100) %>%
mutate(year = year(bookingdate))
ggplot(airbnb_occ_rate, aes(x = month(bookingdate), y = percent_booked)) +
geom_jitter(na.rm=TRUE, alpha=0.5, color = "#007A87") +
geom_smooth(color = "#FF5A5F") +
facet_grid(~year) +
ggtitle(paste("Occupancy Rate Overtime in", city[1])) +
labs(x = "Month", y = "Occupancy Rate") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(airbnb_occ_rate)
dbDisconnect(conn)
## ------------------------------------------------------------------------
# knitr::opts_chunk$set(eval = FALSE)
## ---- message=FALSE------------------------------------------------------
rm(list = ls())
library(RSQLite)
library(tm)
library(ggplot2)
library(gridExtra)
library(stm)
library(quanteda)
library(textfeatures)
library(sentimentr)
library(qdap)
library(lubridate)
library(stargazer)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
## ------------------------------------------------------------------------
start <- Sys.time()
## ------------------------------------------------------------------------
city <- c("Amsterdam", "Melbourne", "New York")
city[1]
## ------------------------------------------------------------------------
set.seed(10)
t1 <- Sys.time()
# ----- Data Importing
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
# ----- Select listings
listing_sample <- dbGetQuery(conn, paste0('SELECT listing.*, annotated_description FROM listing
LEFT JOIN description_udpipe ON listing.listing_id = description_udpipe.listing_id
WHERE market = "',city[1], '"'))
listing_sample <- listing_sample[, !duplicated(colnames(listing_sample))] %>%
mutate(security_deposit = as.numeric(gsub(",", "", substring(security_deposit, 2)))) %>%
mutate(cleaning_fee = as.numeric(gsub(",", "", substring(cleaning_fee, 2)))) %>%
mutate(extra_people = as.numeric(gsub(",", "", substring(extra_people, 2)))) %>%
sample_frac(0.40)
# ----- Select owners of the listings
host_distinct <- unique(listing_sample$host_id)
host_sample <- dbGetQuery(conn, paste('SELECT host_id, host_name FROM host WHERE host_id IN(', paste(host_distinct, collapse = ","), ')'))  %>%
distinct(host_id, host_name)
# ----- Select reviews of the listings
listing_distinct <- listing_sample %>%  distinct(listing_id)
review_sample <- dbGetQuery(conn,paste('
SELECT listing_id, review.review_id, review_date, comments, comments_semi_cleaned, annotated_comments_partb, file_name
FROM review LEFT JOIN comments_cleaned ON review.review_id = comments_cleaned.review_id WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2))) %>%
mutate(review_date = as.Date(review_date))
# ----- Select calendar of the listings
calendar <- dbGetQuery(conn, paste('SELECT * FROM calendar WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2)))
save(calendar, file = 'temp/calendar.rda')
rm(listing_distinct)
rm(host_distinct)
dbDisconnect(conn)
t2 <- Sys.time()
t2-t1
## ------------------------------------------------------------------------
reviewsNum <- review_sample %>% group_by(review_date) %>% summarise(number = n())
ggplot(reviewsNum, aes(review_date, number)) +
geom_point(na.rm=TRUE, color = "#007A87", alpha=0.5) + geom_smooth(color = "#FF5A5F")+
ggtitle(paste("How popular is Airbnb in", city[1], "?"),
subtitle = "Number of Reviews across years") +
labs(x = "Year", y = "Unique listings recieving reviews") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
theme(plot.caption = element_text(color = "grey68"))
rm(reviewsNum)
## ------------------------------------------------------------------------
load(file = 'temp/calendar.rda')
groupedCalendarAll <- calendar %>%
group_by(bookingdate) %>%
summarise(average_price = mean(price, na.rm = TRUE)) %>%
mutate(year = as.factor(as.character(year(bookingdate))))
# ----- Trend in Listing Price
ggplot(groupedCalendarAll, aes(x = month(bookingdate), y=average_price)) +
geom_point(na.rm=TRUE, alpha=0.5, color = "#007A87") + geom_smooth(color = "#FF5A5F")+ facet_grid(~year)+
ggtitle(paste("Trend of Airbnb Listing Prices in", city[1]) ,
subtitle = "Average listing price across Months") +
labs(x = "Month", y = "Average price across Listings") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(groupedCalendarAll)
## ------------------------------------------------------------------------
airbnb_occ_rate <- calendar %>%
group_by(bookingdate) %>%
summarise(totalBooked = sum(booked, na.rm = TRUE), totalListings = n()) %>%
mutate(percent_booked = (totalBooked/totalListings)*100) %>%
mutate(year = year(bookingdate))
ggplot(airbnb_occ_rate, aes(x = month(bookingdate), y = percent_booked)) +
geom_jitter(na.rm=TRUE, alpha=0.5, color = "#007A87") +
geom_smooth(color = "#FF5A5F") +
facet_grid(~year) +
ggtitle(paste("Occupancy Rate Overtime in", city[1])) +
labs(x = "Month", y = "Occupancy Rate") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(airbnb_occ_rate)
setwd("~/Documents/git_gubron/analytics-sandbox/inside_airbnb")
## ------------------------------------------------------------------------
# knitr::opts_chunk$set(eval = FALSE)
## ---- message=FALSE------------------------------------------------------
rm(list = ls())
library(RSQLite)
library(tm)
library(ggplot2)
library(gridExtra)
library(stm)
library(quanteda)
library(textfeatures)
library(sentimentr)
library(qdap)
library(lubridate)
library(stargazer)
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
## ------------------------------------------------------------------------
start <- Sys.time()
## ------------------------------------------------------------------------
city <- c("Amsterdam", "Melbourne", "New York")
city[1]
## ------------------------------------------------------------------------
set.seed(10)
t1 <- Sys.time()
# ----- Data Importing
conn <- dbConnect(RSQLite::SQLite(), "dataset/inside_airbnb.db")
# ----- Select listings
listing_sample <- dbGetQuery(conn, paste0('SELECT listing.*, annotated_description FROM listing
LEFT JOIN description_udpipe ON listing.listing_id = description_udpipe.listing_id
WHERE market = "',city[1], '"'))
listing_sample <- listing_sample[, !duplicated(colnames(listing_sample))] %>%
mutate(security_deposit = as.numeric(gsub(",", "", substring(security_deposit, 2)))) %>%
mutate(cleaning_fee = as.numeric(gsub(",", "", substring(cleaning_fee, 2)))) %>%
mutate(extra_people = as.numeric(gsub(",", "", substring(extra_people, 2)))) %>%
sample_frac(0.40)
# ----- Select owners of the listings
host_distinct <- unique(listing_sample$host_id)
host_sample <- dbGetQuery(conn, paste('SELECT host_id, host_name FROM host WHERE host_id IN(', paste(host_distinct, collapse = ","), ')'))  %>%
distinct(host_id, host_name)
# ----- Select reviews of the listings
listing_distinct <- listing_sample %>%  distinct(listing_id)
review_sample <- dbGetQuery(conn,paste('
SELECT listing_id, review.review_id, review_date, comments, comments_semi_cleaned, annotated_comments_partb, file_name
FROM review LEFT JOIN comments_cleaned ON review.review_id = comments_cleaned.review_id WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2))) %>%
mutate(review_date = as.Date(review_date))
# ----- Select calendar of the listings
calendar <- dbGetQuery(conn, paste('SELECT * FROM calendar WHERE listing_id IN', substring(paste(listing_distinct,collapse = ","),2)))
save(calendar, file = 'temp/calendar.rda')
rm(listing_distinct)
rm(host_distinct)
dbDisconnect(conn)
t2 <- Sys.time()
t2-t1
## ------------------------------------------------------------------------
reviewsNum <- review_sample %>% group_by(review_date) %>% summarise(number = n())
ggplot(reviewsNum, aes(review_date, number)) +
geom_point(na.rm=TRUE, color = "#007A87", alpha=0.5) + geom_smooth(color = "#FF5A5F")+
ggtitle(paste("How popular is Airbnb in", city[1], "?"),
subtitle = "Number of Reviews across years") +
labs(x = "Year", y = "Unique listings recieving reviews") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
theme(plot.caption = element_text(color = "grey68"))
rm(reviewsNum)
## ------------------------------------------------------------------------
load(file = 'temp/calendar.rda')
groupedCalendarAll <- calendar %>%
group_by(bookingdate) %>%
summarise(average_price = mean(price, na.rm = TRUE)) %>%
mutate(year = as.factor(as.character(year(bookingdate))))
# ----- Trend in Listing Price
ggplot(groupedCalendarAll, aes(x = month(bookingdate), y=average_price)) +
geom_point(na.rm=TRUE, alpha=0.5, color = "#007A87") + geom_smooth(color = "#FF5A5F")+ facet_grid(~year)+
ggtitle(paste("Trend of Airbnb Listing Prices in", city[1]) ,
subtitle = "Average listing price across Months") +
labs(x = "Month", y = "Average price across Listings") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(groupedCalendarAll)
## ------------------------------------------------------------------------
airbnb_occ_rate <- calendar %>%
group_by(bookingdate) %>%
summarise(totalBooked = sum(booked, na.rm = TRUE), totalListings = n()) %>%
mutate(percent_booked = (totalBooked/totalListings)*100) %>%
mutate(year = year(bookingdate))
ggplot(airbnb_occ_rate, aes(x = month(bookingdate), y = percent_booked)) +
geom_jitter(na.rm=TRUE, alpha=0.5, color = "#007A87") +
geom_smooth(color = "#FF5A5F") +
facet_grid(~year) +
ggtitle(paste("Occupancy Rate Overtime in", city[1])) +
labs(x = "Month", y = "Occupancy Rate") +
theme(plot.title = element_text(face = "bold")) +
theme(plot.subtitle = element_text(face = "bold", color = "grey35")) +
scale_x_continuous(breaks = c(3, 6, 9, 12))
rm(airbnb_occ_rate)
